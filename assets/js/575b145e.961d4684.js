(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3943],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return h}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),d=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=d(n),h=o,m=u["".concat(l,".").concat(h)]||u[h]||p[h]||i;return n?a.createElement(m,r(r({ref:t},c),{},{components:n})):a.createElement(m,r({ref:t},c))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,r[1]=s;for(var d=2;d<i;d++)r[d]=n[d];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5269:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return r},metadata:function(){return s},toc:function(){return l},default:function(){return c}});var a=n(2122),o=n(9756),i=(n(7294),n(3905)),r={},s={unversionedId:"validator-onboarding",id:"validator-onboarding",isDocsHomePage:!1,title:"Validator onboarding",description:"This page is aimed at validators who want to join Lido for Solana.",source:"@site/docs/validator-onboarding.md",sourceDirName:".",slug:"/validator-onboarding",permalink:"/validator-onboarding",version:"current",frontMatter:{},sidebar:"solidoSidebar",previous:{title:"Fees",permalink:"/fees"},next:{title:"The Solido utility",permalink:"/operation/the-solido-utility"}},l=[{value:"Validator admission",id:"validator-admission",children:[]},{value:"Setting up a vote account",id:"setting-up-a-vote-account",children:[]},{value:"Configuring the validator identity",id:"configuring-the-validator-identity",children:[]},{value:"Setting up a fee account",id:"setting-up-a-fee-account",children:[]},{value:"Setting up a maintainer account",id:"setting-up-a-maintainer-account",children:[]},{value:"Final onboarding step",id:"final-onboarding-step",children:[]}],d={toc:l};function c(e){var t=e.components,n=(0,o.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This page is aimed at validators who want to join Lido for Solana."),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Note for validators")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"If you have already been admitted by the LNOSG, please continue to ",(0,i.kt)("a",{parentName:"p",href:"#setting-up-a-vote-account"},"Setting up\na vote account")," below."))),(0,i.kt)("h2",{id:"validator-admission"},"Validator admission"),(0,i.kt)("p",null,"The set of validators who participate in Lido for Solana (\u201cSolido\u201d) is managed\nby the ",(0,i.kt)("a",{parentName:"p",href:"https://research.lido.fi/t/validator-admission-process/20"},(0,i.kt)("strong",{parentName:"a"},"Lido Node Operator Subgovernance Group (LNOSG)")),", which is\npart of the Lido DAO. The ",(0,i.kt)("a",{parentName:"p",href:"https://enchanted-direction-844.notion.site/Lido-Node-Operators-19ca4a3e7553421486cd3e8be314bb03"},"Lido Node Operators Notion page")," contains\nfurther information about the current operators, and how to apply."),(0,i.kt)("p",null,"After approval from the LNOSG, the steps to onboard a validator to Solido are:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"The validator")," sets up a new identity account and vote account for use\nwith Solido."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"A multisig owner")," creates a multisig transaction to propose adding the\nvote account to the validator set."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"The other multisig owners")," approve this transaction and execute it. At\nthis point, admission of the validator should already have been approved by\nthe LNOSG; the multisig owners merely ratify and execute the decision, they\ndo not make an independent decision about which validators to admit."),(0,i.kt)("li",{parentName:"ol"},"Once the validator is part of the Solido validator set, the Solido\n",(0,i.kt)("a",{parentName:"li",href:"/operation/maintenance"},"maintenance daemon")," will automatically rebalance the stake\nand delegate to the new validator. In version 1, only new deposits can be\nstaked with new validators; we plan to add active rebalancing in a later\nversion."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"/operation/maintenance#maintainer-operators"},(0,i.kt)("strong",{parentName:"a"},"Some validators"))," are expected to operate an instance of\nthe ",(0,i.kt)("a",{parentName:"li",href:"/operation/maintenance"},"maintenance daemon"),".")),(0,i.kt)("p",null,"The remainder of this page goes over step 1 in detail. For steps 2 and 3,\nsee ",(0,i.kt)("a",{parentName:"p",href:"/operation/multisig-guide"},"the multisig guide")," instead."),(0,i.kt)("h2",{id:"setting-up-a-vote-account"},"Setting up a vote account"),(0,i.kt)("p",null,"Solido requires validators to use a dedicated identity and vote account for use\nwith Solido. See ",(0,i.kt)("a",{parentName:"p",href:"/internals/commission"},"the commission page")," for the\nrationale behind the separate vote account. A separate identity account is\nneeded to clarify that the vote account is part of Solido, to distinguish it\nfrom the validator\u2019s public public vote account."),(0,i.kt)("p",null,"We will assume that you are familiar with ",(0,i.kt)("a",{parentName:"p",href:"https://docs.solana.com/running-validator/vote-accounts"},"setting up a Solana vote\naccount"),", and that you have created a new vote account keypair and\nidentity keypair. For simplicity, we\u2019ll asume they are in files in\n",(0,i.kt)("inlineCode",{parentName:"p"},"~/.config/solana")," below, but Solana supports hardware wallets as well."),(0,i.kt)("p",null,"We need to create an vote account with 100% commission, and the withdraw\nauthority set to Solido, so first we need to know the withdraw authority.\nAssuming ",(0,i.kt)("a",{parentName:"p",href:"operation/the-solido-utility#configuration"},(0,i.kt)("inlineCode",{parentName:"a"},"solido")," is configured"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"show-authorities")," will print the\nwithdraw authority:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"$ solido --config mainnet.json show-authorities\n\nStake authority:            W1ZQRwUfSkDKy2oefRBUWph82Vr2zg9txWMA8RQazN5\nMint authority:             8kRRsKezwXS21beVDcAoTmih1XbyFnEAMXXiGXz6J3Jz\nRewards withdraw authority: GgrQiJ8s2pfHsfMbEFtNcejnzLegzZ16c9XtJ2X2FpuF\nReserve account:            3Kwv3pEAuoe4WevPB4rgMBTZndGDb53XT7qwQKnvHPfX\n")),(0,i.kt)("p",null,"For the mainnet-beta deployment shown above, the withdraw authority is\n",(0,i.kt)("inlineCode",{parentName:"p"},"GgrQiJ8s2pfHsfMbEFtNcejnzLegzZ16c9XtJ2X2FpuF"),"."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Because the authority addresses are derived from the program and instance\naddresses, ",(0,i.kt)("inlineCode",{parentName:"p"},"show-authorities")," can compute them even when the program has not yet\nbeen deployed, as long as the address where it will be deployed is known. For\nexisting instances, ",(0,i.kt)("inlineCode",{parentName:"p"},"show-solido")," will also show the authorities, and more\ninformation about the instance."))),(0,i.kt)("p",null,"Create a new vote account with that authority and 100% commission, and confirm:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},'$ solana create-vote-account \\\n  --authorized-withdrawer GgrQiJ8s2pfHsfMbEFtNcejnzLegzZ16c9XtJ2X2FpuF \\\n  --commission 100 \\\n  ~/.config/solana/vote.json \\\n  ~/.config/solana/id.json\n\n$ solana-keygen pubkey ~/.config/solana/vote.json\nEAsHKTdxL9GELqQatEFFe3mbSBcbxyEiA8yoPihGhoM6\n\n$ solana vote-account EAsHKTdxL9GELqQatEFFe3mbSBcbxyEiA8yoPihGhoM6\nAccount Balance: 0.02685864 SOL\nValidator Identity: 9RyFMqXbbUUFEhvA1svJffP7RGAw1fE3YcCtazaom8Me\nVote Authority: {214: "9RyFMqXbbUUFEhvA1svJffP7RGAw1fE3YcCtazaom8Me"}\nWithdraw Authority: GgrQiJ8s2pfHsfMbEFtNcejnzLegzZ16c9XtJ2X2FpuF\nCredits: 0\nCommission: 100%\nRoot Slot: ~\nRecent Timestamp: 1970-01-01T00:00:00Z from slot 0\n')),(0,i.kt)("p",null,"In this case, ",(0,i.kt)("inlineCode",{parentName:"p"},"EAsHKTdxL9GELqQatEFFe3mbSBcbxyEiA8yoPihGhoM6")," is the vote account\naddress, which we need for the final step."),(0,i.kt)("h2",{id:"configuring-the-validator-identity"},"Configuring the validator identity"),(0,i.kt)("p",null,"As a validator, you now have two or more vote accounts:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A public one that anybody can delegate to."),(0,i.kt)("li",{parentName:"ul"},"One for Lido for Solana with 100% commission, that only the Solido program is\nexpected to delegate to.")),(0,i.kt)("p",null,"To distinguish these two in validator lists such as\n",(0,i.kt)("a",{parentName:"p",href:"https://solanabeach.io/validators"},"https://solanabeach.io/validators"),", we ask you to use a separate validator\nidentity account for the Solido vote account. Set the name of your validator to\n\u201cLido / \xabyour-name\xbb\u201d with ",(0,i.kt)("a",{parentName:"p",href:"https://docs.solana.com/running-validator/validator-info"},(0,i.kt)("inlineCode",{parentName:"a"},"solana validator-info")),", and link\nyour Keybase account. For example, for Chorus One, we would run"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},'$ solana validator-info publish \\\n  --keypair ~/.config/solana/id.json \\\n  --website https://chorus.one \\\n  --keybase chorusoneinc \\\n  --details "Chorus One validator for Lido for Solana" \\\n  "Lido / Chorus One"\n')),(0,i.kt)("p",null,"Then upload the public key of your identity account to Keybase, as described in\n",(0,i.kt)("a",{parentName:"p",href:"https://docs.solana.com/running-validator/validator-info#keybase"},"this Solana guide"),"."),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Be sure to fund the identity account as well, as it pays for the votes."))),(0,i.kt)("h2",{id:"setting-up-a-fee-account"},"Setting up a fee account"),(0,i.kt)("p",null,"In addition to the vote account, we need an SPL token account that can hold\nstSOL, to receive validation fees. For this we need to know the stSOL mint\naddress. For an existing instance, we can use ",(0,i.kt)("inlineCode",{parentName:"p"},"show-solido")," to confirm, but for\nmainnet-beta prior to initialization, ",(0,i.kt)("inlineCode",{parentName:"p"},"show-solido")," cannot show anything yet.\nInstead, we created the SPL token mint ahead of time, and we will initialize the\ninstance with this mint address. ",(0,i.kt)("strong",{parentName:"p"},"The mint address for mainnet-beta is ",(0,i.kt)("a",{parentName:"strong",href:"/deployments#mainnet-beta"},"listed\non the deployments page")),". For an existing instance,\n",(0,i.kt)("inlineCode",{parentName:"p"},"show-solido")," displays the mint address:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"$ solido --config testnet.json show-solido  \nManager:    F6xN9xSNduk84x6JxKwd3VuENL46TqmTyQiY36mCvwHr\nstSOL mint: 8ry9FhmvhifEBwLPJpg89fAu19rmUHskDVvEfKuDbQbT\n\n(further output omitted)\n")),(0,i.kt)("p",null,"Create an account, and make it owned by an account that you have the private key\nfor (",(0,i.kt)("inlineCode",{parentName:"p"},"6S21...")," in the example below):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"spl-token create-account \\\n  --owner 6S21QCmpAadEhHj3pY2RMbPMGwgYNvS4Pd7zUXoRDMdK \\\n  8ry9FhmvhifEBwLPJpg89fAu19rmUHskDVvEfKuDbQbT\n\nCreating account 3gD74tkT4NAnzUT5SsiYTV5HPgML4wnjjxrxfpjaFXHk\nSignature: eEoNdMgA37pxSQFJafgYHuE3tX6bmCmT6P4w5fhJTs5rWefcboZPSXjCwudvCy6uS3tD6h6tWfm3em2cwg5dCnG\n")),(0,i.kt)("p",null,"This created stSOL account ",(0,i.kt)("inlineCode",{parentName:"p"},"3gD74tkT4NAnzUT5SsiYTV5HPgML4wnjjxrxfpjaFXHk"),",\nwhich we also need for the final step."),(0,i.kt)("h2",{id:"setting-up-a-maintainer-account"},"Setting up a maintainer account"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"This step is only needed for ",(0,i.kt)("a",{parentName:"strong",href:"/operation/maintenance#maintainer-operators"},"the validators who operate an instance of the\nmaintenance daemon"),". If you are not on that list, you can skip this\nstep.")),(0,i.kt)("p",null,"We need to have an account for the maintenance daemon. The daemon needs to be\nable to sign with this account programmatically, so it is recommended to create\na new account for this purpose, and to make sure it never contains a lot of\nfunds; 1.0","\xa0","SOL should be plenty to run the daemon for many months. In this\nexample, we\u2019ll use account ",(0,i.kt)("inlineCode",{parentName:"p"},"F5HwubK4v7VKazPXzRhdvHqA3MmJR5yXDoC8mXeMpdDw"),"."),(0,i.kt)("h2",{id:"final-onboarding-step"},"Final onboarding step"),(0,i.kt)("p",null,"Please share the vote account, stSOL account, and if applicable, your maintainer\naccount, with the multisig members ",(0,i.kt)("a",{parentName:"p",href:"https://forms.gle/sf5syRvkjTGyqNPMA"},"by filling out this\nform"),". Chorus One will then prepare a multisig transaction\nto add your vote account to the Solido instance, and the multisig members will\nbatch-approve these transactions periodically."),(0,i.kt)("p",null,"After your vote account has been added to the instance, the ",(0,i.kt)("a",{parentName:"p",href:"/operation/maintenance"},"maintenance\nbot")," will automatically delegate new deposits to your vote account."))}c.isMDXComponent=!0}}]);