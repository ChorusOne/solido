"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1239],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),p=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=p(e.components);return o.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},s=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=p(n),m=r,f=s["".concat(c,".").concat(m)]||s[m]||d[m]||i;return n?o.createElement(f,a(a({ref:t},u),{},{components:n})):o.createElement(f,a({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=s;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var p=2;p<i;p++)a[p]=n[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}s.displayName="MDXCreateElement"},141:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},metadata:function(){return c},toc:function(){return p},default:function(){return d}});var o=n(2122),r=n(9756),i=(n(7294),n(3905)),a=["components"],l={title:"development",description:"Overview of development in LIDO for Solana",keywords:["development","developers","lido","solana"],sidebar_position:1},c={unversionedId:"development/development",id:"development/development",isDocsHomePage:!1,title:"Development Overview",description:"Overview of development in LIDO for Solana",source:"@site/docs/development/development.md",sourceDirName:"development",slug:"/development/development",permalink:"/development/development",version:"current",sidebarPosition:1,frontMatter:{title:"development",description:"Overview of development in LIDO for Solana",keywords:["development","developers","lido","solana"],sidebar_position:1},sidebar:"solidoSidebar",previous:{title:"Multisig guide",permalink:"/operation/multisig-guide"},next:{title:"Buiding a Docker image locally",permalink:"/development/building-docker-image"}},p=[{value:"Building the project",id:"building-the-project",children:[{value:"Building the container image",id:"building-the-container-image",children:[]},{value:"Building locally",id:"building-locally",children:[]}]},{value:"Specification",id:"specification",children:[]}],u={toc:p};function d(e){var t=e.components,n=(0,r.Z)(e,a);return(0,i.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"building-the-project"},"Building the project"),(0,i.kt)("p",null,"The project can be built in either of two ways: in the supplied container or locally."),(0,i.kt)("h3",{id:"building-the-container-image"},"Building the container image"),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"/development/building-docker-image"},"building the docker image")," document gives detailed instructions on how to build and run the container supplied in the repo for testing and developing."),(0,i.kt)("h3",{id:"building-locally"},"Building locally"),(0,i.kt)("p",null,"In order to build Lido for Solana locally, one will need a number of prerequisites:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.rust-lang.org/learn/get-started"},"Rust toolchain")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://docs.solana.com/cli/install-solana-cli-tools"},"Solana toolchain")),(0,i.kt)("li",{parentName:"ul"},"Misc System Packages: libudev-dev, libhidapi-dev, pkg-config, openssl (these are the package names for Debian, please source equivalents for your OS is they are not already installed)")),(0,i.kt)("h4",{id:"cli"},"CLI"),(0,i.kt)("p",null,"To build/test the CLI, one can use the normal cargo commands:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rust"},"cargo build\ncargo test\n")),(0,i.kt)("h4",{id:"on-chain-programs"},"On-Chain Programs"),(0,i.kt)("p",null,"For the on-chain parts of the repo, one must use the bpf equivalent commands:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rust"},"cargo build-bpf\ncargo test-bpf\n")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Note: The BPF commands require the Solana SDK to be installed as was previously stated.")),(0,i.kt)("h2",{id:"specification"},"Specification"),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"/development/specification/specification"},"Specification")," document is a deeper dive into the code of Lido for Solana to tour the intent and implementation of the on-chain program and the cli."))}d.isMDXComponent=!0}}]);